import cxapi = require('@aws-cdk/cx-api');
export declare type RenameTable = {
    [key: string]: string;
};
/**
 * A class used to maintain a set of rename directives
 */
export declare class Renames {
    private readonly renameTable;
    private readonly defaultRename?;
    constructor(renameTable: RenameTable, defaultRename?: string | undefined);
    /**
     * Check the selected stacks against the renames, to see that they make sense
     *
     * We explicitly don't check that renamed stacks are in the passed set, so
     * that people may use a default rename table  even when only selecting
     * subsets of stacks.
     *
     * We DO check that if there's a default rename (simple syntax) they
     * only selected one stack.
     */
    validateSelectedStacks(stacks: cxapi.SynthesizedStack[]): void;
    /**
     * Whether this rename has a single rename that renames any stack
     */
    readonly hasDefaultRename: boolean;
    /**
     * Return the target name for a given stack name
     *
     * Returns either the renamed name or the original name.
     */
    finalName(name: string): string;
    private lookupRename;
}
/**
 * Parse a rename expression string and construct a Renames object from it
 *
 * The rename expression looks like:
 *
 *  [OLD:]NEW[,OLD:NEW[,...]]
 *
 * If there is more than one rename, every entry must have an OLD name.
 */
export declare function parseRenames(renameExpr: string | undefined): Renames;
